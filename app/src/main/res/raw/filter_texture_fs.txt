precision mediump float;
uniform sampler2D sTexture1;
uniform sampler2D sTexture2;

varying vec2 texCoord;

float BlendOverLay(float baseColor, float blendColor) {
    if(baseColor < 0.5) {
        return 2.0 * baseColor * blendColor;
    }
    else {
        return 1.0 - ( 2.0 * ( 1.0 - baseColor) * ( 1.0 - blendColor));
    }
}

void main() {
    vec3 baseColor = texture2D(sTexture1, texCoord).rgb;
    vec3 blendColor = texture2D(sTexture2, texCoord).rgb;

    float r = BlendOverLay(baseColor.r, blendColor.r);
    float g = BlendOverLay(baseColor.g, blendColor.g);
    float b = BlendOverLay(baseColor.b, blendColor.b);

    gl_FragColor = vec4(r, g, b, 1.0);
}